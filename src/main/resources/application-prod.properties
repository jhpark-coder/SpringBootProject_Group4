# ===================================================================
# application-prod.properties (운영 환경 'prod' 전용 설정)
# ===================================================================

# MySQL 데이터베이스 설정
spring.datasource.url=jdbc:mysql://mysql-db:3306/springproject?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=nexus_user
spring.datasource.password=nexus_password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# Redis 설정
spring.data.redis.host=redis-cache
spring.data.redis.port=6379

# 캐시 설정 (Redis)
spring.cache.type=redis

# 서버 포트 설정
server.port=8080

# 파일 업로드 설정
file.upload-dir=./uploads
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=200MB

# Path Matching Strategy
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# ===================================================================
# 이메일 설정 (운영 환경)
# ===================================================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=pjh133765@gmail.com
spring.mail.password=azufcmwgvyjwpatr
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===================================================================
# OAuth2 설정 (운영 환경)
# ===================================================================
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com

# --- 구글 ---
spring.security.oauth2.client.registration.google.client-id=494883957678-5rdq2rp4j5ot363v5gopm1ud711dk6lo.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

# --- 카카오 ---
spring.security.oauth2.client.registration.kakao.client-id=e829efe374fbd71b63fcd592586876b7
spring.security.oauth2.client.registration.kakao.client-secret=LKNCZJGpxFRIOBQZz4NsZrUZhcaDuO3m
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8081/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# --- 네이버 ---
spring.security.oauth2.client.registration.naver.client-id=LE2iNDWgS9FbOmujOLa0
spring.security.oauth2.client.registration.naver.client-secret=EsdVKbasP9
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8081/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=name,email,gender,birthyear,birthday
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# ===================================================================
# 아임포트 API 설정 (운영 환경)
# ===================================================================
iamport.api.key=${IAMPORT_API_KEY:ItEQKi3rY7uvDS8l}
iamport.api.secret=${IAMPORT_API_SECRET:HYb3yQ4f65QL89}
iamport.merchant.uid=${IAMPORT_MERCHANT_UID:INIpayTest}

# ===================================================================
# 스케줄러 설정
# ===================================================================
spring.task.scheduling.pool.size=5

# ===================================================================
# Bucket4j Rate Limiting 설정 (운영 환경)
# ===================================================================
# Redis 연결 설정
bucket4j.redis.host=redis-cache
bucket4j.redis.port=6379

# Rate Limiting 기본 설정
bucket4j.rate-limit.enabled=true
bucket4j.rate-limit.capacity=100
bucket4j.rate-limit.refill-amount=100
bucket4j.rate-limit.refill-period=1
bucket4j.rate-limit.refill-unit=minutes

# Rate Limiting 적용할 URL 패턴들 (쉼표로 구분)
bucket4j.rate-limit.include-paths=/api/products/*,/api/faq/*,/api/categories/*,/api/keyword/*,/api/korean/*,/api/main/*,/auctions/*

# Rate Limiting 제외할 URL 패턴들 (쉼표로 구분)
bucket4j.rate-limit.exclude-paths=/health,/actuator/*,/h2-console/*,/test/*,/api/test/*

# 키 생성 전략 (IP, USER_ID, CUSTOM)
bucket4j.rate-limit.key-strategy=IP

# 만료 전략 설정
bucket4j.rate-limit.expiration-minutes=1

# ===================================================================
# SSL 인증서 설정 (운영 환경)
# ===================================================================
# SSL 활성화 (운영 환경에서만 사용)
# server.ssl.enabled=true
# server.ssl.key-store=classpath:keystore.p12
# server.ssl.key-store-password=your-keystore-password
# server.ssl.key-store-type=PKCS12
# server.ssl.key-alias=nexus

# ===================================================================
# 로깅 설정 (운영 환경)
# ===================================================================
logging.level.com.creatorworks.nexus=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.thymeleaf=WARN

# 로그 파일 설정
logging.file.name=logs/nexus.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n